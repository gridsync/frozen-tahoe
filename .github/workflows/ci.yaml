name: CI

on: [push, pull_request]

jobs:
  Linux:
    strategy:
      matrix:
        os:
          - runs-on: ubuntu-20.04
          - runs-on: ubuntu-18.04
    runs-on: ${{ matrix.os.runs-on }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install dependencies
      run: |
        sudo apt-get install --no-install-recommends make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
        git clone --branch 1.2.24 https://github.com/pyenv/pyenv.git ~/.pyenv
        echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
        echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
        echo "$ECHO_FLAGS" 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> ~/.bashrc
        cat ~/.bashrc
        source ~/.bashrc
        export PYTHON_CONFIGURE_OPTS="--enable-shared"
        env
        pyenv install --skip-existing 2.7.18
        pyenv rehash
        pyenv global 2.7.18
        python2 -m pip install --upgrade setuptools pip virtualenv

        python2 -m pip install --upgrade virtualenv
    - name: Make (1)
      run: |
        make all
    - name: Make (2)
      run: |
        make all
    - name: Verify
      run: |
        dist/Tahoe-LAFS/tahoe --version-and-path
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        path: dist/Tahoe-LAFS.zip
        name: Tahoe-LAFS-${{ matrix.os.runs-on }}.zip
  macOS:
    strategy:
      matrix:
        os:
          - runs-on: macos-11.0
          - runs-on: macos-10.15
    runs-on: ${{ matrix.os.runs-on }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install dependencies
      run: |
        brew install openssl readline sqlite3 xz zlib
        git clone --branch 1.2.24 https://github.com/pyenv/pyenv.git ~/.pyenv
        echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc
        echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc
        echo "$ECHO_FLAGS" 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> ~/.zshrc
        source ~/.zshrc
        export MACOSX_DEPLOYMENT_TARGET="10.13"
        export PYTHON_CONFIGURE_OPTS="--enable-framework"
        env
        pyenv install --skip-existing 2.7.18
        pyenv rehash
        pyenv global 2.7.18
        python2 -m pip install --upgrade setuptools pip virtualenv
    - name: Make (1)
      run: |
        make all
    - name: Make (2)
      run: |
        make all
    - name: Verify
      run: |
        dist/Tahoe-LAFS/tahoe --version-and-path
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        path: dist/Tahoe-LAFS.zip
        name: Tahoe-LAFS-${{ matrix.os.runs-on }}.zip
  Windows:
    strategy:
      matrix:
        os:
          - runs-on: windows-2019
    runs-on: ${{ matrix.os.runs-on }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install dependencies
      run: |
        py -2 -m pip install --upgrade virtualenv
    - name: Make (1)
      run: |
        .\make.bat 
    - name: Make (2)
      run: |
        .\make.bat clean
        .\make.bat
    - name: Verify
      run: |
        dist/Tahoe-LAFS/tahoe.exe --version-and-path
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        path: dist/Tahoe-LAFS.zip
        name: Tahoe-LAFS-${{ matrix.os.runs-on }}.zip 
